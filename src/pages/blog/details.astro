---
import Layout from "src/layouts/Layout.astro";
import { config } from "config";
import { showLoaderString, removeLoaderString } from "src/utils/loader";
import blogHeroImage from "@images/index/hero/impulso-negocios-tecnologia.webp";

const getApiUrl = config.apiUrl; // Obtener la URL de la API aquí
const blogsUrl = config.endpoints.blogs;
---

{/* Details de blog */}
<Layout title="Blog Details">
  <div class="bg-teal-500 flex flex-col min-h-screen">
    <!-- SECCIÓN HERO -->
    <header class="relative w-full h-screen md:min-h-[80vh]">
      <img
          id="blog-img"
          src={blogHeroImage.src}
          width={blogHeroImage.width}
          height={blogHeroImage.height}
          alt="Fondo Hero"
          class="w-full h-full object-cover filter brightness-50"
      />
      <div
          class="absolute inset-0 pb-16 w-full h-full flex flex-col items-center justify-center bg-gradient-to-b from-teal-700/65 to-85%"
      >
        <div class="max-w-6xl mx-auto px-4 font-bold">
          <h1
              id="blog-title"
              class="block font-montserrat mb-4
           text-3xl md:text-5xl
           text-white md:text-white
           text-center md:text-left"
          ></h1>
        </div>
      </div>
    </header>

    <!-- CONTENIDO -->
    <main
        id="blog-content"
        class="relative z-10 max-w-5xl mx-auto px-8 py-10 bg-white rounded-xl shadow-2xl mb-10 -mt-44 md:-mt-36 border-4 border-teal-500"
    >
      <div class="flex flex-col md:flex-row justify-between mb-2 md:mb-4 gap-2 md:gap-8">
        <h2
            id="blog-content-subtitle"
            class="text-1xl md:text-3xl font-bold font-garet text-black mb-1 md:mb-0"
        ></h2>
        <p
            id="blog-content-subtitle2"
            class="text-lg md:text-2xl font-bold font-garet text-teal-600 md:self-end"
        ></p>
      </div>
      <!-- Fecha -->
      <div
          id="blog-date"
          class="inline-block px-6 py-2 bg-teal-600 text-white text-base font-bold rounded-full mb-6 text-center shadow-md"
      >
        Fecha de publicación no disponible
      </div>
      <!-- Contenido principal -->
      <div id="blog-sections" class="space-y-8">
        <!-- Aquí se insertan las secciones dinámicamente -->
      </div>

      <!-- Video -->
      <div id="blog-video-section" class="mt-10"></div>
    </main>
  </div>
  <script
      define:vars={{ getApiUrl, blogsUrl, showLoaderString, removeLoaderString }}
  >
    eval(showLoaderString);
    eval(removeLoaderString);

    // Función mejorada para remover loader con timeout de seguridad
    function removeLoaderSafe() {
      try {
        removeLoader();
        console.log("Loader removido exitosamente");
      } catch (error) {
        console.error("Error removiendo loader:", error);
      }

      // Timeout de seguridad para asegurar que el loader se remueva
      setTimeout(() => {
        const loader = document.getElementById("page-loader");
        if (loader) {
          loader.remove();
          console.log("Loader removido por timeout de seguridad");
        }
      }, 100);
    }

    document.addEventListener("DOMContentLoaded", async () => {
      showLoader();

      // Timeout de seguridad de 10 segundos para remover el loader
      const safetyTimeout = setTimeout(() => {
        console.warn("Timeout de seguridad: removiendo loader después de 10 segundos");
        removeLoaderSafe();
      }, 10000);

      try {
        const params = new URLSearchParams(window.location.search);
        const idBlog = params.get("id")?.trim();

        if (!idBlog) {
          console.error("No se encontró ID del blog");
          clearTimeout(safetyTimeout);
          removeLoaderSafe();
          return;
        }

        console.log(`Fetching: ${getApiUrl}${blogsUrl.list}/${idBlog}`);
        console.log(`User Agent: ${navigator.userAgent}`);
        console.log(`Screen width: ${window.screen.width}`);
        console.log(`API URL: ${getApiUrl}`);
        console.log(`Blogs URL: ${JSON.stringify(blogsUrl)}`);

        // Verificar que la URL esté completa
        const fullUrl = `${getApiUrl}${blogsUrl.list}/${idBlog}`;
        if (!fullUrl.startsWith('http')) {
          throw new Error(`URL inválida: ${fullUrl}`);
        }

        const response = await fetch(fullUrl);
        console.log("Response status:", response.status);

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        console.log("Fetched data:", data);

        if (!data || !data.data) {
          throw new Error("No se encontraron datos del blog");
        }

        const blog = data.data;

        // Elementos del DOM
        const blogTitleElement = document.getElementById("blog-title"); // Header
        const blogTitleMobileElement = document.getElementById("blog-title-mobile"); // Mobile content
        const blogTitleDesktopElement = document.getElementById("blog-title-desktop"); // Desktop content
        const blogImgElement = document.getElementById("blog-img");
        const blogDateElement = document.getElementById("blog-date");
        const blogContentTitleElement =
            document.getElementById("blog-content-title");
        const blogContentSubtitleElement = document.getElementById("blog-content-subtitle");
        const blogContentSubtitle2Element = document.getElementById("blog-content-subtitle2");
        //const blogContentSubtitle3Element = document.getElementById("blog-content-subtitle3");
        const blogSectionsElement = document.getElementById("blog-sections");
        const blogVideoSectionElement = document.getElementById("blog-video-section");

        // HERO grande
        // Asignar título a todos los elementos
        const titulo = blog.titulo.toUpperCase();
        if (blogTitleElement) blogTitleElement.innerHTML = titulo;
        if (blogTitleMobileElement) blogTitleMobileElement.innerHTML = titulo;
        if (blogTitleDesktopElement) blogTitleDesktopElement.innerHTML = titulo;

        // Negro (h2)
        if (blogContentSubtitleElement) {
          blogContentSubtitleElement.innerHTML = blog.subtitulo1.toUpperCase();
        }
        // Verde (p)
        if (blogContentSubtitle2Element) {
          blogContentSubtitle2Element.innerHTML = blog.subtitulo2;
        }

        // Verificar que todos los elementos necesarios existen
        console.log("Elementos del DOM encontrados:", {
          blogTitleElement: !!blogTitleElement,
          blogTitleMobileElement: !!blogTitleMobileElement,
          blogTitleDesktopElement: !!blogTitleDesktopElement,
          blogContentSubtitleElement: !!blogContentSubtitleElement,
          blogContentSubtitle2Element: !!blogContentSubtitle2Element,
          blogImgElement: !!blogImgElement,
          blogDateElement: !!blogDateElement,
          blogSectionsElement: !!blogSectionsElement,
          blogVideoSectionElement: !!blogVideoSectionElement
        });
        if (blogImgElement) {
          blogImgElement.alt = blog.titulo;
        }
        if (blogDateElement) {
          const updatedAt = blog.updated_at;
          if (updatedAt) {
            const date = new Date(updatedAt);

            const day = String(date.getUTCDate()).padStart(2, "0");
            const month = String(date.getUTCMonth() + 1).padStart(2, "0");
            const year = date.getUTCFullYear();

            const hours = String(date.getUTCHours()).padStart(2, "0");
            const minutes = String(date.getUTCMinutes()).padStart(2, "0");

            blogDateElement.innerHTML = `${day}-${month}-${year} / ${hours}:${minutes}`;
          } else {
            blogDateElement.innerHTML = "FECHA / HORA DE PUBLICACIÓN";
          }
        }
        if (blogSectionsElement && Array.isArray(blog.imagenes) && Array.isArray(blog.parrafos)) {
          blogSectionsElement.innerHTML = "";
          blog.imagenes.forEach((imagen, index) => {
            const section = document.createElement("section");
            section.className = "mb-5 text-justify";

            section.innerHTML = `
    <div class="flex flex-col md:flex-row ${index % 2 === 1 ? "md:flex-row-reverse" : ""} gap-6">
      <!-- Imagen secundaria estandarizada -->
      <div class="relative w-full md:w-1/2 aspect-[16/9] overflow-hidden rounded-lg shadow-md">
        <img 
          src="${getApiUrl}${imagen.ruta_imagen}" 
          alt="Imagen del blog"
          class="absolute w-full h-full object-cover"
        />
      </div>

          <!-- Párrafo -->
          <div class="md:w-1/2 px-4 pt-2 flex flex-col justify-center">
            <article>
              <p class="text-gray-700 text-lg md:text-xl mb-4 text-justify">
                ${blog.parrafos?.[index]?.parrafo || "Texto no disponible"}
              </p>
            </article>
          </div>
        </div>
      `;

            blogSectionsElement.appendChild(section);
          });
        }


        const blogProductLinkElement = document.getElementById("blog-product-link");

        // Verificar si existe un producto_id en el blog
        if (blog.producto_id && blogProductLinkElement) {
          if (blog.producto_id && blogProductLinkElement) {
            blogProductLinkElement.href = `/productos/detalle.html?id=${blog.producto_id}`;
            blogProductLinkElement.classList.remove("hidden");
          }
        }

        // MOSTRAR VIDEO CON IFRAME
        if (blogVideoSectionElement && blog.video_id) {
          blogVideoSectionElement.innerHTML = `
            <section class="bg-teal-700 p-6 rounded-lg">
              <h1 class="text-white md:text-xl font-bold mb-4">${blog.video_titulo}</h1>
              <div class="relative w-full h-[30rem]">
                <iframe
                  width="100%"
                  height="100%"
                  src="https://www.youtube.com/embed/${blog.video_id}"
                  title="YouTube video player"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                  referrerpolicy="strict-origin-when-cross-origin"
                  allowfullscreen
                  class="rounded-lg w-full h-full"
                ></iframe>
              </div>
            </section>
          `;
        }

        // Responsive design ahora se maneja completamente con CSS/Tailwind
        // Sin necesidad de manipular el DOM en JavaScript
        clearTimeout(safetyTimeout);
        removeLoaderSafe();

      } catch (error) {
        console.error("Error fetching blog:", error);
        console.error("Error stack:", error.stack);

        // Mostrar mensaje de error al usuario
        const blogContent = document.getElementById("blog-content");
        if (blogContent) {
          blogContent.innerHTML = `
            <div class="text-center p-8">
              <h2 class="text-2xl font-bold text-red-600 mb-4">Error al cargar el blog</h2>
              <p class="text-gray-600 mb-4">No se pudo cargar el contenido del blog. Por favor, intenta nuevamente.</p>
              <button onclick="window.location.reload()" class="bg-teal-500 text-white px-6 py-2 rounded-lg hover:bg-teal-600">
                Reintentar
              </button>
            </div>
          `;
        }

        clearTimeout(safetyTimeout);
        removeLoaderSafe();
      }
    });

    // Listener adicional para el evento load como respaldo
    window.addEventListener("load", () => {
      setTimeout(() => {
        const loader = document.getElementById("page-loader");
        if (loader) {
          console.warn("Removiendo loader en window.load como respaldo");
          loader.remove();
        }
      }, 500);
    });

    // Capturar cualquier error JavaScript no manejado
    window.addEventListener("error", (event) => {
      console.error("Error JavaScript no manejado:", event.error);
      console.error("Stack:", event.error?.stack);

      // Si hay un error con classList, remover el loader
      if (event.error?.message?.includes("classList")) {
        console.warn("Error relacionado con classList detectado, removiendo loader");
        removeLoaderSafe();
      }
    });

    // Timestamp para invalidar caché
    console.log("Blog details script cargado:", new Date().toISOString());
  </script>
</Layout>