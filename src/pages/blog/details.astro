---
import Layout from "src/layouts/Layout.astro";
import { config } from "config";
import { showLoaderString, removeLoaderString } from "src/utils/loader";

const getApiUrl = config.apiUrl; // Obtener la URL de la API aquí
const blogsUrl = config.endpoints.blogs;
---

{/* Details de blog */}
<Layout title="Blog Details">
  <div class="bg-teal-500 flex flex-col min-h-screen">
    {/* SECCIÓN HERO */}
    <header class="relative w-full h-full">
      <img
        id="blog-img"
        src=""
        alt=""
        class="w-full h-full object-cover filter brightness-50"
      />
      <div
        class="absolute inset-0 w-full h-full pt-20 flex flex-col items-start bg-linear-to-b from-teal-700/65 to-85%"
      >
        <div class="max-w-6xl mx-auto px-4 text-white font-bold mt-44">
          <h1 id="blog-title" class="text-4xl md:text-6xl mb-4"></h1>
          <p id="blog-subtitle" class="text-3xl md:text-5xl"></p>
        </div>
      </div>
    </header>

    {/* CONTENIDO */}
    <main
      id="blog-content"
      class="relative z-10 -mt-64 flex-grow max-w-6xl mx-auto px-4 py-10 bg-white rounded-lg shadow-lg mb-10"
    >
      {/* FECHA */}
      <div
        id="blog-date"
        class="inline-block px-3 py-1 bg-teal-600 text-white text-sm rounded-full mb-4"
      >
        Fecha de publicación no disponible
      </div>

      <div class="flex flex-col md:flex-row justify-between items-center mb-6">
        <h2
          id="blog-content-title"
          class="text-3xl md:text-4xl font-bold text-teal-600 mb-2 md:mb-0"
        >
        </h2>
        <p id="blog-content-subtitle" class="text-xl md:text-2xl text-gray-700">
        </p>
      </div>

      {/* CONTENIDO DEL BLOG */}
      <div id="blog-sections"></div>

      {/* VIDEO DEL BLOG */}
      <div id="blog-video-section">
        <section class="bg-teal-700 p-6 rounded-lg -36">
          <h1
            id="blog-video-title"
            class="text-white md:text-xl font-bold mb-4"
          >
          </h1>
          <div class="relative w-full h-[30rem]">
            <video id="blog-video" controls class="w-full h-full rounded-lg">
              <source src="" type="video/mp4" />
              Tu navegador no soporta videos.
            </video>
          </div>
        </section>
      </div>
    </main>
  </div>
</Layout>

<script
  define:vars={{ getApiUrl, blogsUrl, showLoaderString, removeLoaderString }}
>
  eval(showLoaderString);
  eval(removeLoaderString);
  document.addEventListener("DOMContentLoaded", async () => {
    showLoader();
    const params = new URLSearchParams(window.location.search);
    const idBlog = params.get("id")?.trim();
    if (!idBlog) return;

    console.log(`Fetching: ${getApiUrl}${blogsUrl.list}/${idBlog}`);

    try {
      const response = await fetch(`${getApiUrl}${blogsUrl.list}/${idBlog}`);
      console.log("Response:", response);
      const data = await response.json();
      console.log("Fetched data:", data);

      blog = data.data;

      const blogTitleElement = document.getElementById("blog-title");
      const blogSubtitleElement = document.getElementById("blog-subtitle");
      const blogImgElement = document.getElementById("blog-img");
      const blogDateElement = document.getElementById("blog-date");
      const blogContentTitleElement =
        document.getElementById("blog-content-title");
      const blogContentSubtitleElement = document.getElementById(
        "blog-content-subtitle"
      );
      const blogSectionsElement = document.getElementById("blog-sections");
      const blogVideoTitleElement = document.getElementById("blog-video-title");
      const blogVideoElement = document.getElementById("blog-video");

      if (blogTitleElement) blogTitleElement.innerHTML = blog.titulo + ":";
      if (blogSubtitleElement)
        blogSubtitleElement.innerHTML = blog.subTituloBlog;
      if (blogImgElement) {
        blogImgElement.src = blog.imagenPrincipal;
        blogImgElement.alt = blog.titulo;
      }
      if (blogDateElement) {
        const createdAt = blog.created_at;
        if (createdAt) {
          const formattedDate = new Date(createdAt).toLocaleDateString(
            "es-ES",
            {
              year: "numeric",
              month: "long",
              day: "numeric",
            }
          );
          blogDateElement.innerHTML = `Publicado el ${formattedDate}`;
        } else {
          blogDateElement.innerHTML = "Fecha de publicación no disponible";
        }
      }
      if (blogContentTitleElement)
        blogContentTitleElement.innerHTML = blog.tituloBlog;
      if (blogContentSubtitleElement)
        blogContentSubtitleElement.innerHTML = blog.subTituloBlog;

      if (blogSectionsElement) {
        blogSectionsElement.innerHTML = "";
        blog.imagenesBlog.forEach((imagen, index) => {
          const section = document.createElement("section");
          section.className = "mb-10";
          section.innerHTML = `
            <div class="flex flex-col md:flex-row items-start ${index % 2 === 1 ? "md:flex-row-reverse" : ""}">
              <img src="${imagen}" alt="Imagen del blog" class="w-full md:w-1/2 h-auto rounded-lg object-cover mb-6 md:mb-0 md:mr-6" />
              <div class="md:w-1/2">
                <p class="text-gray-700 text-lg md:text-xl mb-4">${blog.parrafoImagenesBlog[index] || "Texto no disponible"}</p>
              </div>
            </div>
          `;
          blogSectionsElement.appendChild(section);
        });
      }

      if (blogVideoTitleElement && blogVideoElement) {
        blogVideoTitleElement.innerHTML = blog.tituloVideoBlog;
        const sourceElement = blogVideoElement.querySelector("source");
        if (sourceElement) {
          sourceElement.src = blog.videoBlog;
          blogVideoElement.load(); // Asegura que el navegador recargue el video
        }
      }

      removeLoader();
    } catch (error) {
      console.error("Error fetching blog:", error);
      const container = document.getElementById("blog-container");
      if (!container) return;
      container.innerHTML = `<p>Error: ${error.message}</p>`;
    }
  });
</script>
