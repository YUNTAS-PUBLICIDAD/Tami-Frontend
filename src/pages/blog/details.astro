---
import Layout from "src/layouts/Layout.astro";
import { config } from "config";
import { showLoaderString, removeLoaderString } from "src/utils/loader";

const getApiUrl = config.apiUrl; // Obtener la URL de la API aquí
const blogsUrl = config.endpoints.blogs;
---

{/* Details de blog */}
<Layout title="Blog Details">
  <div class="bg-teal-500 flex flex-col min-h-screen">

    <!-- SECCIÓN HERO -->
    <header class="relative w-full h-screen md:min-h-[80vh]">
      <img
          id="blog-img"
          src="/src/assets/images/index/hero/impulso-negocios-tecnologia.webp"
          alt="Fondo Hero"
          class="w-full h-full object-cover filter brightness-50"
      />
      <div
          class="absolute inset-0 pb-16 w-full h-full flex flex-col items-center justify-center bg-gradient-to-b from-teal-700/65 to-85%"
      >
        <div class="max-w-6xl mx-auto px-4 text-white font-bold">
          <h1 id="blog-title" class="font-montserrat text-4xl md:text-5xl mb-4"></h1>
        </div>
      </div>
    </header>

    <!-- CONTENIDO -->
    <main
        id="blog-content"
        class="relative z-10 max-w-5xl mx-auto px-8 py-10 bg-white rounded-xl shadow-2xl mb-10 -mt-44 md:-mt-36 border-4 border-teal-500"
    >
      <div class="px-4 md:px-8">
        <h1 id="blog-title" class="font-montserrat text-4xl md:text-5xl font-bold text-teal-700 mb-6 text-center"></h1>
      </div>
      <div class="flex flex-col md:flex-row justify-between mb-2 md:mb-4 gap-2 md:gap-8">
        <h2
            id="blog-content-subtitle"
            class="text-1xl md:text-3xl font-bold font-garet text-black mb-1 md:mb-0"
        ></h2>
        <p
            id="blog-content-subtitle2"
            class="text-lg md:text-2xl font-bold font-garet text-teal-600 md:self-end"
        ></p>
      </div>

      <!-- Fecha -->
      <div
          id="blog-date"
          class="inline-block px-6 py-2 bg-teal-600 text-white text-base font-bold rounded-full mb-6 text-center shadow-md"
      >
        Fecha de publicación no disponible
      </div>

      <!-- Contenido principal -->
      <div id="blog-sections" class="space-y-8">
        <!-- Aquí se insertan las secciones dinámicamente -->
      </div>

      <!-- Video -->
      <div id="blog-video-section" class="mt-10"></div>
    </main>
  </div>
  <script
      define:vars={{ getApiUrl, blogsUrl, showLoaderString, removeLoaderString }}
  >
    eval(showLoaderString);
    eval(removeLoaderString);
    document.addEventListener("DOMContentLoaded", async () => {
      showLoader();
      const params = new URLSearchParams(window.location.search);
      const idBlog = params.get("id")?.trim();
      if (!idBlog) return;

      console.log(`Fetching: ${getApiUrl}${blogsUrl.list}/${idBlog}`);

      try {
        const response = await fetch(`${getApiUrl}${blogsUrl.list}/${idBlog}`);
        console.log("Response:", response);
        const data = await response.json();
        console.log("Fetched data:", data);

        const blog = data.data;

        const blogTitleElement = document.getElementById("blog-title");
        const blogImgElement = document.getElementById("blog-img");
        const blogDateElement = document.getElementById("blog-date");
        const blogContentTitleElement =
            document.getElementById("blog-content-title");
        const blogContentSubtitleElement = document.getElementById("blog-content-subtitle");
        const blogContentSubtitle2Element = document.getElementById("blog-content-subtitle2");
        //const blogContentSubtitle3Element = document.getElementById("blog-content-subtitle3");
        const blogSectionsElement = document.getElementById("blog-sections");
        const blogVideoSectionElement = document.getElementById("blog-video-section");

        // HERO grande
        if (blogTitleElement) blogTitleElement.innerHTML = blog.titulo.toUpperCase();
        // Negro (h2)
        if (blogContentSubtitleElement)
          blogContentSubtitleElement.innerHTML = blog.subtitulo1.toUpperCase();;
        // Verde (p)
        if (blogContentSubtitle2Element)
          blogContentSubtitle2Element.innerHTML = blog.subtitulo2;
        if (blogImgElement) {
          blogImgElement.alt = blog.titulo;
        }
        if (blogDateElement) {
          const updatedAt = blog.updated_at;
          if (updatedAt) {
            const date = new Date(updatedAt);

            const day = String(date.getDate()).padStart(2, "0");
            const month = String(date.getMonth() + 1).padStart(2, "0");
            const year = date.getFullYear();

            const hours = String(date.getHours()).padStart(2, "0");
            const minutes = String(date.getMinutes()).padStart(2, "0");

            blogDateElement.innerHTML = `${day}-${month}-${year} / ${hours}:${minutes}`;
          } else {
            blogDateElement.innerHTML = "FECHA / HORA DE PUBLICACIÓN";
          }
        }
        if (blogSectionsElement && Array.isArray(blog.imagenes) && Array.isArray(blog.parrafos)) {
          blogSectionsElement.innerHTML = "";
          blog.imagenes.forEach((imagen, index) => {
            const section = document.createElement("section");
            section.className = "mb-5 text-justify";
            section.innerHTML = `
                <div class="flex flex-col md:flex-row ${index % 2 === 1 ? "md:flex-row-reverse" : ""}">
                <img src="${getApiUrl}${imagen.ruta_imagen}" alt="Imagen del blog" class="..." />  
              <div class="md:w-1/2 px-4 pt-2">
                <article>
                  <p class="text-gray-700 text-lg md:text-xl mb-4 text-justify">
                    ${blog.parrafos?.[index]?.parrafo || "Texto no disponible"}
                  </p>
                </article>
              </div>
            </div>
    `;
            blogSectionsElement.appendChild(section);
          });
        }


        const blogProductLinkElement = document.getElementById("blog-product-link");

        // Verificar si existe un producto_id en el blog
        if (blog.producto_id && blogProductLinkElement) {
          if (blog.producto_id && blogProductLinkElement) {
            blogProductLinkElement.href = `/productos/detalle.html?id=${blog.producto_id}`;
            blogProductLinkElement.classList.remove("hidden");
          }
        }

        // MOSTRAR VIDEO CON IFRAME
        if (blogVideoSectionElement && blog.video_id) {
          blogVideoSectionElement.innerHTML = `
            <section class="bg-teal-700 p-6 rounded-lg">
              <h1 class="text-white md:text-xl font-bold mb-4">${blog.video_titulo}</h1>
              <div class="relative w-full h-[30rem]">
                <iframe
                  width="100%"
                  height="100%"
                  src="https://www.youtube.com/embed/${blog.video_id}"
                  title="YouTube video player"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                  referrerpolicy="strict-origin-when-cross-origin"
                  allowfullscreen
                  class="rounded-lg w-full h-full"
                ></iframe>
              </div>
            </section>
          `;
        }

        // Añade este bloque para reubicar el contenido en móviles
        if (window.innerWidth < 768) {
          const container = document.getElementById("blog-title").parentElement;
          const mainContent = document.getElementById("blog-content");
          // Reubicar el container
          mainContent.prepend(container);

          // Cambiar color de texto usando Tailwind
          container.classList.remove("text-white");
          container.classList.add("text-teal-600");

          // Obtener los elementos
          const blogTitle = document.getElementById("blog-title");
          const blogSubtitle = document.getElementById("blog-subtitle");
          blogSubtitle.classList.add("mb-6");

          // Cambiar tamaño de texto manualmente (no con clases Tailwind dinámicas)
          if (blogTitle) {
            blogTitle.style.fontSize = "1.75rem"; // Ajuste para pantallas móviles
          }
          if (blogSubtitle) {
            blogSubtitle.style.fontSize = "1.5rem"; // Ajuste para pantallas móviles
          }
        }
        removeLoader();
      } catch (error) {
        console.error("Error fetching blog:", error);
        const container = document.getElementById("blog-container");
        if (!container) return;
        container.innerHTML = `<p>Error: ${error.message}</p>`;
      }
    });
  </script>
</Layout>