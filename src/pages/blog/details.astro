---
import Layout from "src/layouts/Layout.astro";
import { config } from "config";
import { showLoaderString, removeLoaderString } from "src/utils/loader";
import blogHeroImage from "@images/index/hero/impulso-negocios-tecnologia.webp";
const getApiUrl = config.apiUrl;
const blogsUrl = config.endpoints.blogs;
---

{/* Details de blog */}
<Layout title="Blog Details" description="Descripcion por defecto" canonicalUrl="https://tamimaquinarias.com/blog">
  <div class="bg-teal-500 flex flex-col min-h-screen">
    <!-- SECCIÓN HERO -->
    <header class="relative w-full h-screen md:min-h-[80vh]">
      <img
          id="blog-img"
          src={blogHeroImage.src}
          width={blogHeroImage.width}
          height={blogHeroImage.height}
          alt="Fondo Hero"
          title="Fondo Hero"
          class="w-full h-full object-cover filter brightness-50"
      />
      <div
          class="absolute inset-0 pb-16 w-full h-full flex flex-col items-center justify-center bg-gradient-to-b from-teal-700/65 to-85%"
      >
        <div class="max-w-6xl mx-auto px-4 font-bold">
          <h1
              id="blog-title"
              class="block font-montserrat mb-4
                           text-3xl md:text-5xl
                           text-white md:text-white
                           text-center md:text-left"
          ></h1>
        </div>
      </div>
    </header>

    <!-- CONTENIDO -->
    <main
        id="blog-content"
        class="relative z-10 max-w-5xl mx-auto px-8 py-10 bg-white rounded-xl shadow-2xl mb-10 -mt-44 md:-mt-36 border-4 border-teal-500"
    >
      <div class="flex flex-col md:flex-row justify-between mb-2 md:mb-4 gap-2 md:gap-8">
        <h2
            id="blog-content-subtitle"
            class="text-1xl md:text-3xl font-bold font-garet text-black mb-1 md:mb-0"
        ></h2>
        <p
            id="blog-content-subtitle2"
            class="text-lg md:text-2xl font-bold font-garet text-teal-600 md:self-end"
        ></p>
      </div>
      <!-- Fecha -->
      <div
          id="blog-date"
          class="inline-block px-6 py-2 bg-teal-600 text-white text-base font-bold rounded-full mb-6 text-center shadow-md"
      >
        Fecha de publicación no disponible
      </div>
      <!-- Contenido principal -->
      <div id="blog-sections" class="space-y-8">
        <!-- Aquí se insertan las secciones dinámicamente -->
      </div>

      <!-- Video -->
      <div id="blog-video-section" class="mt-10"></div>
    </main>
  </div>
 

  <!-- SEO y JSON-LD inline, sin script externo -->
  <script define:vars={{ getApiUrl, blogsUrl, showLoaderString, removeLoaderString }}>
    eval(showLoaderString);
    eval(removeLoaderString);
    function removeLoaderSafe() {
      try { removeLoader(); } catch (error) {}
      setTimeout(() => {
        const loader = document.getElementById("page-loader");
        if (loader) loader.remove();
      }, 100);
    }
    document.addEventListener("DOMContentLoaded", async () => {
      showLoader();
      const safetyTimeout = setTimeout(removeLoaderSafe, 10000);
      try {
        console.log('[DEBUG] DOMContentLoaded, blog-seo-utils.js:', typeof window.setDynamicSEO, typeof window.insertJsonLdBlog);
        const params = new URLSearchParams(window.location.search);
        const idBlog = params.get("id")?.trim();
        if (!idBlog) { clearTimeout(safetyTimeout); removeLoaderSafe(); return; }
        const fullUrl = `${getApiUrl}${blogsUrl.list}/${idBlog}`;
        if (!fullUrl.startsWith('http')) throw new Error(`URL inválida: ${fullUrl}`);
        const response = await fetch(fullUrl);
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        const data = await response.json();
        if (!data || !data.data) throw new Error("No se encontraron datos del blog");
        const blog = data.data;
        // SEO dinámico y JSON-LD inline
        function setDynamicSEO(blog) {
          document.title = blog.etiqueta?.meta_titulo || 'Título para blogs por defecto';
          let metaDescription = document.querySelector('meta[name="description"]');
          if (!metaDescription) {
            metaDescription = document.createElement('meta');
            metaDescription.name = "description";
            document.head.appendChild(metaDescription);
          }
          metaDescription.content = blog.etiqueta?.meta_descripcion || 'Descripción por defecto';
          let canonicalLink = document.querySelector('link[rel="canonical"]');
          if (!canonicalLink) {
            canonicalLink = document.createElement('link');
            canonicalLink.rel = 'canonical';
            document.head.appendChild(canonicalLink);
          }
          canonicalLink.href = window.location.href;
        }
        function generateBlogJsonLd(blog) {
          const images = [
            blog.miniatura,
            ...(blog.imagenes?.map(img => img.ruta_imagen) || [])
          ];
          const description = blog.subtitulo1 || (blog.parrafos?.map(p => p.parrafo).join(" "));
          return {
            "@context": "https://schema.org/",
            "@type": "Blog",
            "@id": "https://tamimaquinarias.com/blog/",
            mainEntityOfPage: "https://tamimaquinarias.com/blog/",
            name: blog.titulo,
            description: description,
            publisher: {
              "@type": "Organization",
              "@id": "https://tamimaquinarias.com",
              name: "Tami Maquinarias",
              logo: {
                "@type": "ImageObject",
                "@id": "https://tamimaquinarias.com/_astro/logo-estatico-100x116.B0Pf3Br1.webp",
                url: "https://tamimaquinarias.com/_astro/logo-estatico-100x116.B0Pf3Br1.webp",
                width: "600",
                height: "60"
              }
            },
            blogPost: [
              {
                "@type": "BlogPosting",
                "@id": `https://tamimaquinarias.com/blog/detail/?id=${blog.id}`,
                mainEntityOfPage: `https://tamimaquinarias.com/blog/detail/?id=${blog.id}`,
                headline: blog.nombre_producto,
                name: blog.nombre_producto,
                description: description,
                datePublished: blog.created_at,
                dateModified: blog.updated_at,
                author: {
                  "@type": "Person",
                  url: "https://tamimaquinarias.com",
                  name: "Equipo Tami Maquinarias"
                },
                image: {
                  "@type": "ImageObject",
                  "@id": images[0],
                  url: images[0],
                  height: "800",
                  width: "1200"
                },
                url: `https://tamimaquinarias.com/blog/detail/?id=${blog.id}`,
                keywords: ["LED", "Marketing Visual"]
              }
            ]
          };
        }
        function insertJsonLdBlog(blog) {
          const jsonLd = generateBlogJsonLd(blog);
          const script = document.createElement("script");
          script.type = "application/ld+json";
          script.text = JSON.stringify(jsonLd, null, 2);
          document.head.appendChild(script);
        }
        setDynamicSEO(blog);
        insertJsonLdBlog(blog);
        // Renderizado de contenido (igual que antes)
        const blogTitleElement = document.getElementById("blog-title");
        const blogTitleMobileElement = document.getElementById("blog-title-mobile");
        const blogTitleDesktopElement = document.getElementById("blog-title-desktop");
        const blogImgElement = document.getElementById("blog-img");
        const blogDateElement = document.getElementById("blog-date");
        const blogContentSubtitleElement = document.getElementById("blog-content-subtitle");
        const blogContentSubtitle2Element = document.getElementById("blog-content-subtitle2");
        const blogSectionsElement = document.getElementById("blog-sections");
        const blogVideoSectionElement = document.getElementById("blog-video-section");
        const titulo = blog.titulo.toUpperCase();
        if (blogTitleElement) blogTitleElement.innerHTML = titulo;
        if (blogTitleMobileElement) blogTitleMobileElement.innerHTML = titulo;
        if (blogTitleDesktopElement) blogTitleDesktopElement.innerHTML = titulo;
        if (blogContentSubtitleElement) blogContentSubtitleElement.innerHTML = blog.subtitulo1.toUpperCase();
        if (blogContentSubtitle2Element) blogContentSubtitle2Element.innerHTML = blog.subtitulo2;
        if (blogImgElement) blogImgElement.alt = blog.titulo;
        if (blogDateElement) {
          const updatedAt = blog.updated_at;
          if (updatedAt) {
            const date = new Date(updatedAt);
            const day = String(date.getDate()).padStart(2, "0");
            const month = String(date.getMonth() + 1).padStart(2, "0");
            const year = date.getFullYear();
            const hours = String(date.getHours()).padStart(2, "0");
            const minutes = String(date.getMinutes()).padStart(2, "0");
            blogDateElement.innerHTML = `${day}-${month}-${year} / ${hours}:${minutes}`;
          } else {
            blogDateElement.innerHTML = "FECHA / HORA DE PUBLICACIÓN";
          }
        }
        if (blogSectionsElement && Array.isArray(blog.imagenes) && Array.isArray(blog.parrafos)) {
          blogSectionsElement.innerHTML = "";
          blog.imagenes.forEach((imagen, index) => {
            const section = document.createElement("section");
            section.className = "mb-5 text-justify";
            section.innerHTML = `
      <div class="flex flex-col md:flex-row ${index % 2 === 1 ? "md:flex-row-reverse" : ""} gap-6 items-center">
        <div class="relative w-full md:w-1/2 h-64 md:h-96 overflow-hidden rounded-lg shadow-md flex justify-center items-center bg-white">
          <img 
            src="${getApiUrl}${imagen.ruta_imagen}" 
            alt="${imagen.text_alt || 'Imagen del blog'}"
            title="${imagen.text_alt || 'Imagen del blog'}"
            class="w-full h-full object-cover transition-all duration-300"
          />
        </div>
        <div class="md:w-1/2 px-4 flex flex-col justify-center">
          <article class="prose prose-sm md:prose-lg text-gray-700 text-justify mb-4">
            <p>
              ${blog.parrafos?.[index]?.parrafo || "Texto no disponible"}
            </p>
          </article>
        </div>
      </div>
    `;
            blogSectionsElement.appendChild(section);
          });
        }
        if (blogVideoSectionElement && blog.video_id) {
          blogVideoSectionElement.innerHTML = `
            <section class="bg-teal-700 p-6 rounded-lg">
              <h1 class="text-2xl text-white md:text-xl font-bold mb-4">${blog.video_titulo}</h1>
              <div class="relative w-full h-[30rem]">
                <iframe
                  width="100%"
                  height="100%"
                  src="https://www.youtube.com/embed/${blog.video_id}"
                  title="YouTube video player"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                  referrerpolicy="strict-origin-when-cross-origin"
                  allowfullscreen
                  class="rounded-lg w-full h-full"
                ></iframe>
              </div>
            </section>
          `;
        }
        clearTimeout(safetyTimeout);
        removeLoaderSafe();
      } catch (error) {
        const blogContent = document.getElementById("blog-content");
        if (blogContent) {
          blogContent.innerHTML = `
            <div class="text-center p-8">
              <h2 class="text-2xl font-bold text-red-600 mb-4">Error al cargar el blog</h2>
              <p class="text-gray-600 mb-4">No se pudo cargar el contenido del blog. Por favor, intenta nuevamente.</p>
              <button onclick="window.location.reload()" class="bg-teal-500 text-white px-6 py-2 rounded-lg hover:bg-teal-600">
                Reintentar
              </button>
            </div>
          `;
        }
        clearTimeout(safetyTimeout);
        removeLoaderSafe();
      }
    });
    window.addEventListener("load", () => {
      setTimeout(() => {
        const loader = document.getElementById("page-loader");
        if (loader) loader.remove();
      }, 500);
    });
    window.addEventListener("error", (event) => {
      if (event.error?.message?.includes("classList")) removeLoaderSafe();
    });
  </script>

  </script>
</Layout>