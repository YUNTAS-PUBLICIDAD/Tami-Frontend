---
import Layout from "src/layouts/Layout.astro";
import { config } from "config";
import { showLoaderString, removeLoaderString } from "src/utils/loader";

const getApiUrl = config.apiUrl; // Obtener la URL de la API aquí
const blogsUrl = config.endpoints.blogs;
---

{/* Details de blog */}
<Layout title="Blog Details">
  <div class="bg-teal-500 flex flex-col min-h-screen">
    {/* SECCIÓN HERO */}
    <header class="relative w-full h-screen md:min-h-[80vh]">
      <img
        id="blog-img"
        src=""
        alt=""
        class="w-full h-full object-cover filter brightness-50"
      />
      <div
        class="absolute inset-0 pb-16 w-full h-full flex flex-col items-center justify-center bg-linear-to-b from-teal-700/65 to-85%"
      >
        <div class="max-w-6xl mx-auto px-4 text-white font-bold">
          <h1 id="blog-title" class="text-4xl md:text-6xl mb-4"></h1>
          <p id="blog-subtitle" class="text-3xl md:text-5xl"></p>
        </div>
      </div>
    </header>

    {/* CONTENIDO */}
    <main
      id="blog-content"
      class="relative z-10 max-w-6xl mx-auto px-4 py-10 bg-white rounded-lg shadow-lg mb-10
      -mt-42 md:-mt-36"
    >
      {/* FECHA */}
      <div
        id="blog-date"
        class="inline-block px-3 py-1 bg-teal-600 text-white text-sm rounded-full mb-4"
      >
        Fecha de publicación no disponible
      </div>

      <div class="flex flex-col md:flex-row justify-between items-end mb-6">
        <h2
          id="blog-content-title"
          class="text-3xl md:text-4xl font-bold text-teal-600 mb-2 md:mb-0"
        >
        </h2>
        <p id="blog-content-subtitle" class="text-lg md:text-2xl text-gray-700">
        </p>
      </div>

      {/* CONTENIDO DEL BLOG */}
      <div id="blog-sections" class="text-justify"></div>

      {/* VIDEO DEL BLOG */}
      <div id="blog-video-section"></div>
    </main>
  </div>

  <script
    define:vars={{ getApiUrl, blogsUrl, showLoaderString, removeLoaderString }}
  >
    eval(showLoaderString);
    eval(removeLoaderString);
    document.addEventListener("DOMContentLoaded", async () => {
      showLoader();
      const params = new URLSearchParams(window.location.search);
      const idBlog = params.get("id")?.trim();
      if (!idBlog) return;

      console.log(`Fetching: ${getApiUrl}${blogsUrl.list}/${idBlog}`);

      try {
        const response = await fetch(`${getApiUrl}${blogsUrl.list}/${idBlog}`);
        console.log("Response:", response);
        const data = await response.json();
        console.log("Fetched data:", data);

        const blog = data.data;

        const blogTitleElement = document.getElementById("blog-title");
        const blogSubtitleElement = document.getElementById("blog-subtitle");
        const blogImgElement = document.getElementById("blog-img");
        const blogDateElement = document.getElementById("blog-date");
        const blogContentTitleElement =
          document.getElementById("blog-content-title");
        const blogContentSubtitleElement = document.getElementById(
          "blog-content-subtitle"
        );
        const blogSectionsElement = document.getElementById("blog-sections");
        const blogVideoTitleElement =
          document.getElementById("blog-video-title");
        const blogVideoElement = document.getElementById("blog-video");

      if (blogTitleElement) blogTitleElement.innerHTML = blog.titulo + ":";
      if (blogSubtitleElement)
        blogSubtitleElement.innerHTML = blog.subTituloBlog;
      if (blogImgElement) {
        blogImgElement.src = blog.imagenPrincipal;
        blogImgElement.alt = blog.titulo;
      }
      if (blogDateElement) {
        const createdAt = blog.created_at;
        if (createdAt) {
          const formattedDate = new Date(createdAt).toLocaleDateString(
            "es-ES",
            {
              year: "numeric",
              month: "long",
              day: "numeric",
            },
          );
          blogDateElement.innerHTML = `Publicado el ${formattedDate}`;
        } else {
          blogDateElement.innerHTML = "Fecha de publicación no disponible";
        }
      }
      if (blogDateElement) {
        const createdAt = blog.created_at;
        if (createdAt) {
          const formattedDate = new Date(createdAt).toLocaleDateString(
            "es-ES",
            {
              year: "numeric",
              month: "long",
              day: "numeric",
            },
          );
          blogDateElement.innerHTML = `Publicado el ${formattedDate}`;
        } else {
          blogDateElement.innerHTML = "Fecha de publicación no disponible";
        }
      }
      if (blogContentTitleElement)
        blogContentTitleElement.innerHTML = blog.tituloBlog;
      if (blogContentSubtitleElement)
        blogContentSubtitleElement.innerHTML = blog.parrafo; // Reemplazamos la primera asignación

        if (blogSectionsElement && Array.isArray(blog.imagenesBlog)) {
          blogSectionsElement.innerHTML = "";
          blog.imagenesBlog.forEach((imagen, index) => {
            const section = document.createElement("section");
            section.className = "mb-5 text-justify";
            section.innerHTML = `
        <div class="flex flex-col md:flex-row ${index % 2 === 1 ? "md:flex-row-reverse" : ""}">
          <img src="${imagen}" alt="Imagen del blog" class="w-full md:w-1/2 h-auto rounded-lg object-cover mb-6 md:mb-0" />
          <div class="md:w-1/2 px-4 pt-2">
            <article>
              <p class="text-gray-700 text-lg md:text-xl mb-4 text-justify">
                ${blog.parrafoImagenesBlog?.[index] || "Texto no disponible"}
              </p>
            </article>
          </div>
        </div>
      `;
            blogSectionsElement.appendChild(section);
          });
        }

        // MOSTRAR VIDEO CON IFRAME
        if (blogVideoSectionElement && blog.video_id) {
          blogVideoSectionElement.innerHTML = `
            <section class="bg-teal-700 p-6 rounded-lg">
              <h1 class="text-white md:text-xl font-bold mb-4">${blog.tituloVideoBlog}</h1>
              <div class="relative w-full h-[30rem]">
                <iframe
                  width="100%"
                  height="100%"
                  src="https://www.youtube.com/embed/${blog.video_id}"
                  title="YouTube video player"
                  frameborder="0"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                  referrerpolicy="strict-origin-when-cross-origin"
                  allowfullscreen
                  class="rounded-lg w-full h-full"
                ></iframe>
              </div>
            </section>
          `;
        }

        removeLoader();
      } catch (error) {
        console.error("Error fetching blog:", error);
        const container = document.getElementById("blog-container");
        if (!container) return;
        container.innerHTML = `<p>Error: ${error.message}</p>`;
      }
    });
  </script>
</Layout>
