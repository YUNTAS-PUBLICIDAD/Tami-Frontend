name: Compilar y publicar en rama build

on:
  pull_request:
    types: [closed] # Ejecutar cuando se cierre un pull request
    branches:
      - main # Solo cuando el PR es hacia main

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    name: Compilar y Publicar
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Obtener todo el historial para manejar ramas correctamente

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Instalar dependencias
        run: npm install

      - name: Compilar proyecto
        run: npm run build
        env:
          NODE_ENV: production

      - name: Configurar Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global pull.rebase false

      - name: Gestionar la rama build
        run: |
          # Verificar si la rama build existe remotamente
          if git ls-remote --heads origin build | grep build; then
            echo "La rama build existe remotamente"
            git branch -D build || true
            git checkout -b build --track origin/build
          else
            echo "Creando nueva rama build"
            git checkout -b build
          fi

      - name: Publicar a rama build
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: build
          FOLDER: dist # Carpeta que se publicará en la rama build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: "Build: ({sha}) {msg}"
          SQUASH_HISTORY: true
          CLEAR_GLOBS_FILE_FILTER: "**/*" # Asegura que se borren archivos antiguos
